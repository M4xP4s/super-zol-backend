name: integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration:
    name: integration-tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build kaggle-data-api service
        run: pnpm nx build kaggle-data-api

      - name: Apply database migrations
        working-directory: services/kaggle-data-api
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        run: |
          # Install postgresql-client for psql
          sudo apt-get update
          sudo apt-get install -y postgresql-client

          # Run migrations
          for migration in helm/migrations/*.sql; do
            echo "Running migration: $migration"
            psql -h localhost -U test_user -d test_db -f "$migration"
          done

      - name: Start API service in background
        working-directory: dist/services/kaggle-data-api
        env:
          PORT: 3001
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          LOG_LEVEL: info
        run: |
          node main.js &
          echo "API_PID=$!" >> $GITHUB_ENV

          # Wait for API to be ready
          timeout 30 bash -c 'until curl -f http://localhost:3001/health/live; do sleep 1; done'

      - name: Run integration tests
        env:
          CI: true
          API_BASE_URL: http://localhost:3001
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        run: just test-integration-ci

      - name: Stop API service
        if: always()
        run: |
          if [ -n "$API_PID" ]; then
            kill $API_PID || true
          fi
