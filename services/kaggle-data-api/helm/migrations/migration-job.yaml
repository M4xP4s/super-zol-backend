apiVersion: batch/v1
kind: Job
metadata:
  name: kaggle-data-api-migrations
  namespace: super-zol
  labels:
    app: kaggle-data-api
    component: migrations
spec:
  ttlSecondsAfterFinished: 100
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: kaggle-data-api
        component: migrations
    spec:
      restartPolicy: Never
      initContainers:
        # Wait for PostgreSQL to be ready
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z postgresql.super-zol.svc.cluster.local 5432; do
                echo "PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "PostgreSQL is ready!"
      containers:
        - name: migrations
          image: postgres:16-alpine
          command:
            - /bin/sh
            - -c
            - |
              # Install netcat for healthcheck (already done in init)
              # Run migrations
              cd /migrations
              chmod +x run-migrations.sh
              ./run-migrations.sh
          env:
            - name: DB_HOST
              value: postgresql.super-zol.svc.cluster.local
            - name: DB_PORT
              value: '5432'
            - name: DB_NAME
              value: superzol
            - name: DB_USER
              value: superzol
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: password
          volumeMounts:
            - name: migrations
              mountPath: /migrations
              readOnly: true
      volumes:
        - name: migrations
          configMap:
            name: kaggle-data-api-migrations
            defaultMode: 0755
